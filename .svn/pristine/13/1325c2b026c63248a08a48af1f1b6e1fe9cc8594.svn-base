package org.hqu.production_ms.service.impl;

import java.util.List;

import org.hqu.production_ms.domain.CarDriver;
import org.hqu.production_ms.domain.CarDriverExample;
import org.hqu.production_ms.domain.custom.CustomResult;
import org.hqu.production_ms.domain.custom.EUDataGridResult;
import org.hqu.production_ms.domain.po.CarDriverPO;
import org.hqu.production_ms.mapper.CarDriverMapper;
import org.hqu.production_ms.service.CarDriverService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

@Service
public class CarDriverServiceImpl implements CarDriverService{
	@Autowired
	CarDriverMapper driverMapper;
	@Override
	public List<CarDriver> find() throws Exception {
		CarDriverExample example = new CarDriverExample();
		return driverMapper.selectByExample(example);
	}

	@Override
	public EUDataGridResult getList(int page, int rows, CarDriver carDriver) throws Exception {
		//分页处理
				PageHelper.startPage(page, rows);
				List<CarDriver> list = driverMapper.find();
				//创建一个返回值对象
				EUDataGridResult result = new EUDataGridResult();
				result.setRows(list);
				//取记录总条数
				PageInfo<CarDriver> pageInfo = new PageInfo<>(list);
				result.setTotal(pageInfo.getTotal());
				return result;
	}

	@Override
	public CarDriver get(int carDriverId) throws Exception {
		return driverMapper.selectSingleCarDriver(carDriverId);
	}

	@Override
	public CustomResult delete(int string) throws Exception {
		int i = driverMapper.deleteByPrimaryKey(string);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "删除信息失败");
		}
	}

	@Override
	public CustomResult deleteBatch(int[] ids) throws Exception {
		int i = driverMapper.deleteBatch(ids);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "删除信息失败");
		}
	}

	@Override
	public CustomResult insert(CarDriverPO carDriver) throws Exception {
		int i = driverMapper.insert(carDriver);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "新增技术特性信息失败");
		}
	}

	@Override
	public CustomResult updateAll(CarDriverPO carDriver) throws Exception {
		int i = driverMapper.updateByPrimaryKey(carDriver);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "修改技术特性信息失败");
		}
	}

	@Override
	public CustomResult update(CarDriverPO carDriver) throws Exception {
		int i = driverMapper.updateByPrimaryKeySelective(carDriver);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "修改技术特性信息失败");
		}
	}

	@Override
	public List<CarDriver> searchCarDriverByCarDriverName(String driverFrom) throws Exception {
		CarDriverExample example = new CarDriverExample();
		CarDriverExample.Criteria criteria = example.createCriteria();
		criteria.andDrviernameLike(driverFrom);
		return driverMapper.selectByExample(example);
	}

	@Override
	public List<CarDriver> searchCarDriverByCarDriverId(int carDriverId) throws Exception {
		CarDriverExample example = new CarDriverExample();
		CarDriverExample.Criteria criteria = example.createCriteria();
		criteria.andTypeidEqualTo(carDriverId);
		return driverMapper.selectByExample(example);
	}

	@Override
	public EUDataGridResult searchCarDriverByCarDriverName(Integer page, Integer rows, String name) throws Exception {
			//分页处理
			PageHelper.startPage(page, rows);
			List<CarDriver> list = driverMapper.searchCarDriverByCarDriverDriverfrom(name);
			//创建一个返回值对象
			EUDataGridResult result = new EUDataGridResult();
			result.setRows(list);
			//取记录总条数
			PageInfo<CarDriver> pageInfo = new PageInfo<>(list);
			result.setTotal(pageInfo.getTotal());
			return result;
	}

	@Override
	public EUDataGridResult searchCarDriverByCarDrivernum(Integer page, Integer rows, String drivenum) throws Exception {
		//分页处理
		PageHelper.startPage(page, rows);
		List<CarDriver> list = driverMapper.searchCarDriverByCarDriverName(drivenum);
		//创建一个返回值对象
		EUDataGridResult result = new EUDataGridResult();
		result.setRows(list);
		//取记录总条数
		PageInfo<CarDriver> pageInfo = new PageInfo<>(list);
		result.setTotal(pageInfo.getTotal());
		return result;
	}



}
