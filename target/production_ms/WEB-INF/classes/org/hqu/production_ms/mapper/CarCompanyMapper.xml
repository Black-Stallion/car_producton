<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hqu.production_ms.mapper.CarCompanyMapper" >
  <resultMap id="BaseResultMap" type="org.hqu.production_ms.domain.CarCompany" >
    <id column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <association property="department" javaType="department">
		<id column="department_id" property="departmentId" jdbcType="VARCHAR" />
	    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	    <result column="fatherdep" property="fatherdep" jdbcType="VARCHAR" />
	    <result column="level" property="level" jdbcType="INTEGER" />
	</association>
  </resultMap>
  <select id="find" parameterType="carCompany" resultMap="BaseResultMap">
		SELECT
		 company_id,
		 name,
		 address,
		 department.department_id,
		 department.department_name,
		 department.fatherdep,
		 department.level
		FROM 
			c_company
			LEFT JOIN department ON c_company.department_id = department.department_id
	</select>
	 <select id="find1" parameterType="carCompany" resultMap="BaseResultMap">
		SELECT
		 company_id,
		 name,
		 address,
		 department.fatherdep,
			department.level,
		 department.department_id,
		 department.department_name
		FROM 
			c_company
			LEFT JOIN department ON c_company.department_id = department.department_id
		where 
			 c_company.department_id=#{departmentId}
	</select>
	<select id="selectSingleCarCompany" parameterType="INTEGER" resultMap="BaseResultMap">
		SELECT
		 company_id,
		 name,
		 address,
		 department.fatherdep,
			department.level,
		 department.department_id,
		 department.department_name
		FROM 
			c_company
			LEFT JOIN department ON c_company.department_id = department.department_id
		WHERE
		 company_id = #{removeId}
	</select>
	
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			c_company
		WHERE
			company_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    company_id, department_id, name, address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.hqu.production_ms.domain.CarCompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from c_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from c_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from c_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hqu.production_ms.domain.CarCompanyExample" >
    delete from c_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hqu.production_ms.domain.CarCompany" >
    insert into c_company (company_id, department_id, name, 
      address)
    values (#{companyId,jdbcType=INTEGER}, #{departmentId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.hqu.production_ms.domain.CarCompany" >
    insert into c_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hqu.production_ms.domain.CarCompanyExample" resultType="java.lang.Integer" >
    select count(*) from c_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update c_company
    <set >
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update c_company
    set company_id = #{record.companyId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hqu.production_ms.domain.CarCompany" >
    update c_company
    <set >
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hqu.production_ms.domain.CarCompany" >
    update c_company
    set department_id = #{departmentId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
</mapper>