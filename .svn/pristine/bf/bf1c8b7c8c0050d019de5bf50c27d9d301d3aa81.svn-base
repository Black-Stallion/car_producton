package org.hqu.production_ms.service.impl;

import java.util.List;

import org.hqu.production_ms.domain.BaoYangWarn;
import org.hqu.production_ms.domain.BaoYangWarnExample;
import org.hqu.production_ms.domain.custom.CustomResult;
import org.hqu.production_ms.domain.custom.EUDataGridResult;
import org.hqu.production_ms.domain.po.BaoYangWarnPO;
import org.hqu.production_ms.mapper.BaoYangWarnMapper;
import org.hqu.production_ms.service.BaoYangWarnService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
@Service
public class BaoYangWarnServiceImpl implements BaoYangWarnService {
	@Autowired
	BaoYangWarnMapper baoYangWarnMapper;
	@Override
	public List<BaoYangWarn> find() throws Exception {
		BaoYangWarnExample example = new BaoYangWarnExample();
		return baoYangWarnMapper.selectByExample(example);
	}

	@Override
	public EUDataGridResult getList(int page, int rows, BaoYangWarn baoYangWarn) throws Exception {
		//分页处理
				PageHelper.startPage(page, rows);
				List<BaoYangWarn> list = baoYangWarnMapper.find();
				//创建一个返回值对象
				EUDataGridResult result = new EUDataGridResult();
				result.setRows(list);
				//取记录总条数
				PageInfo<BaoYangWarn> pageInfo = new PageInfo<>(list);
				result.setTotal(pageInfo.getTotal());
				return result;
	}

	@Override
	public BaoYangWarn get(int warnId) throws Exception {
		return baoYangWarnMapper.selectSingleBaoYangWarn(warnId);
	}

	@Override
	public CustomResult delete(int string) throws Exception {
		int i = baoYangWarnMapper.deleteByPrimaryKey(string);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "删除信息失败");
		}
	}

	@Override
	public CustomResult deleteBatch(int[] ids) throws Exception {
		int i = baoYangWarnMapper.deleteBatch(ids);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "删除信息失败");
		}
	}

	@Override
	public CustomResult insert(BaoYangWarnPO baoYangWarn) throws Exception {
		int i = baoYangWarnMapper.insert(baoYangWarn);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "保养提醒记录信息失败");
		}
	}

	@Override
	public CustomResult updateAll(BaoYangWarnPO baoYangWarn) throws Exception {
		int i = baoYangWarnMapper.updateByPrimaryKey(baoYangWarn);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "维修提醒记录信息失败");
		}
	}

	@Override
	public CustomResult update(BaoYangWarnPO BaoYangWarn) throws Exception {
		int i = baoYangWarnMapper.updateByPrimaryKeySelective(BaoYangWarn);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "维修提醒记录信息失败");
		}
	}

	@Override
	public CustomResult updateStatus(int id) throws Exception {
		int i = baoYangWarnMapper.updateStatus(id);
		if(i>0){
			return CustomResult.ok();
		}else{
			return CustomResult.build(101, "维修已读失败");
		}
		
	}




}
