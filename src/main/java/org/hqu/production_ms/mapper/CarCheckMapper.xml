<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hqu.production_ms.mapper.CarCheckMapper" >
  <resultMap id="BaseResultMap" type="org.hqu.production_ms.domain.CarCheck" >
    <id column="check_id" property="checkId" jdbcType="INTEGER" />
    <result column="checkyear" property="checkyear" jdbcType="INTEGER" />
    <result column="checkMonth" property="checkmonth" jdbcType="INTEGER" />
    <result column="carscore" property="carscore" jdbcType="VARCHAR" />
    <result column="carQuestion" property="carquestion" jdbcType="VARCHAR" />
    <result column="results" property="results" jdbcType="VARCHAR" />
   <association property="carRegister" javaType="carRegister">
		<id column="car_id" property="carId" jdbcType="INTEGER" />
	    <result column="carnumber" property="carnumber" jdbcType="VARCHAR" />
	    <result column="useNature" property="usenature" jdbcType="VARCHAR" />
	</association>
	<association property="department" javaType="department">
		<id column="department_id" property="departmentId" jdbcType="VARCHAR" />
	    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	    <result column="fatherdep" property="fatherdep" jdbcType="VARCHAR" />
	    <result column="level" property="level" jdbcType="INTEGER" />
	</association>
  </resultMap>
  
   <!-- 扩展的sql -->
  <!-- 查询所有记录 -->
	<select id="find" parameterType="carCheck" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			ORDER BY checkyear desc
	</select>
	<select id="find1" parameterType="String" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
			0=0
			and c_register.department_id=#{departmentId}
			ORDER BY checkyear desc
	</select>
	<!-- 查询所单个记录 -->
	<select id="selectSingleCarCheck" parameterType="INTEGER" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			WHERE  check_id = #{checkId}
		
	</select>
	
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			c_car_check
		WHERE
			check_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
  <select id="searchCarCheckByCheckyear" parameterType="INTEGER" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			WHERE  checkyear = #{checkyear}
			
	</select>
	
	<select id="searchCarCheckByCarCheckCarId" parameterType="INTEGER" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			WHERE  c_register.car_id  =#{carnumber}
			
	</select>
  <select id="searchCarCheckBy1" parameterType="String" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
				c_register.carnumber LIKE CONCAT( '%',#{carnumber},'%' )
	</select>
	<select id="searchCarCheckBy2" parameterType="String" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
		where 
				department.department_name LIKE CONCAT( '%',#{departmentName},'%' )
	</select>
	<select id="searchCarCheckBy1s" parameterType="String" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
				c_register.department_id=#{0}
			and 
				c_register.carnumber LIKE CONCAT( '%',#{1},'%' )
	</select>
	<select id="searchCarCheckBy2s" parameterType="String" resultMap="BaseResultMap">
		SELECT
			check_id,
			checkyear,
			checkMonth,
			carscore,
			carQuestion,
			results,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			department.department_name
		FROM 
			c_car_check 
			LEFT JOIN c_register ON c_register.car_id = c_car_check.car_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
				c_register.department_id=#{0}
			and 
				department.department_name LIKE CONCAT( '%',#{1},'%' )
	</select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    check_id, checkyear, checkMonth, carscore, carQuestion, results, car_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.hqu.production_ms.domain.CarCheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from c_car_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from c_car_check
    where check_id = #{checkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from c_car_check
    where check_id = #{checkId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hqu.production_ms.domain.CarCheckExample" >
    delete from c_car_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hqu.production_ms.domain.CarCheck" >
    insert into c_car_check (check_id, checkyear, checkMonth, 
      carscore, carQuestion, results, 
      car_id)
    values (#{checkId,jdbcType=INTEGER}, #{checkyear,jdbcType=INTEGER}, #{checkmonth,jdbcType=INTEGER}, 
      #{carscore,jdbcType=VARCHAR}, #{carquestion,jdbcType=VARCHAR}, #{results,jdbcType=VARCHAR}, 
      #{carId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.hqu.production_ms.domain.CarCheck" >
    insert into c_car_check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="checkId != null" >
        check_id,
      </if>
      <if test="checkyear != null" >
        checkyear,
      </if>
      <if test="checkmonth != null" >
        checkMonth,
      </if>
      <if test="carscore != null" >
        carscore,
      </if>
      <if test="carquestion != null" >
        carQuestion,
      </if>
      <if test="results != null" >
        results,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="checkId != null" >
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="checkyear != null" >
        #{checkyear,jdbcType=INTEGER},
      </if>
      <if test="checkmonth != null" >
        #{checkmonth,jdbcType=INTEGER},
      </if>
      <if test="carscore != null" >
        #{carscore,jdbcType=VARCHAR},
      </if>
      <if test="carquestion != null" >
        #{carquestion,jdbcType=VARCHAR},
      </if>
      <if test="results != null" >
        #{results,jdbcType=VARCHAR},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hqu.production_ms.domain.CarCheckExample" resultType="java.lang.Integer" >
    select count(*) from c_car_check
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update c_car_check
    <set >
      <if test="record.checkId != null" >
        check_id = #{record.checkId,jdbcType=INTEGER},
      </if>
      <if test="record.checkyear != null" >
        checkyear = #{record.checkyear,jdbcType=INTEGER},
      </if>
      <if test="record.checkmonth != null" >
        checkMonth = #{record.checkmonth,jdbcType=INTEGER},
      </if>
      <if test="record.carscore != null" >
        carscore = #{record.carscore,jdbcType=VARCHAR},
      </if>
      <if test="record.carquestion != null" >
        carQuestion = #{record.carquestion,jdbcType=VARCHAR},
      </if>
      <if test="record.results != null" >
        results = #{record.results,jdbcType=VARCHAR},
      </if>
      <if test="record.carId != null" >
        car_id = #{record.carId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update c_car_check
    set check_id = #{record.checkId,jdbcType=INTEGER},
      checkyear = #{record.checkyear,jdbcType=INTEGER},
      checkMonth = #{record.checkmonth,jdbcType=INTEGER},
      carscore = #{record.carscore,jdbcType=VARCHAR},
      carQuestion = #{record.carquestion,jdbcType=VARCHAR},
      results = #{record.results,jdbcType=VARCHAR},
      car_id = #{record.carId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hqu.production_ms.domain.CarCheck" >
    update c_car_check
    <set >
      <if test="checkyear != null" >
        checkyear = #{checkyear,jdbcType=INTEGER},
      </if>
      <if test="checkmonth != null" >
        checkMonth = #{checkmonth,jdbcType=INTEGER},
      </if>
      <if test="carscore != null" >
        carscore = #{carscore,jdbcType=VARCHAR},
      </if>
      <if test="carquestion != null" >
        carQuestion = #{carquestion,jdbcType=VARCHAR},
      </if>
      <if test="results != null" >
        results = #{results,jdbcType=VARCHAR},
      </if>
      <if test="carId != null" >
        car_id = #{carId,jdbcType=INTEGER},
      </if>
    </set>
    where check_id = #{checkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hqu.production_ms.domain.CarCheck" >
    update c_car_check
    set checkyear = #{checkyear,jdbcType=INTEGER},
      checkMonth = #{checkmonth,jdbcType=INTEGER},
      carscore = #{carscore,jdbcType=VARCHAR},
      carQuestion = #{carquestion,jdbcType=VARCHAR},
      results = #{results,jdbcType=VARCHAR},
      car_id = #{carId,jdbcType=INTEGER}
    where check_id = #{checkId,jdbcType=INTEGER}
  </update>
</mapper>