<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hqu.production_ms.mapper.CarBigMapper" >
  <resultMap id="BaseResultMap" type="org.hqu.production_ms.domain.CarBig" >
    <id column="big_id" property="bigId" jdbcType="INTEGER" />
    <result column="car_id" property="carId" jdbcType="INTEGER" />
    <result column="bigcarnum" property="bigcarnum" jdbcType="VARCHAR" />
    <result column="drivername" property="drivername" jdbcType="VARCHAR" />
    <result column="changeDate" property="changedate" jdbcType="TIMESTAMP" />
    <result column="changbig" property="changbig" jdbcType="VARCHAR" />
    <result column="why" property="why" jdbcType="VARCHAR" />
     <association property="carDriver" javaType="carDriver">
		<id column="driver_id" property="driverId" jdbcType="INTEGER" />
	    <result column="drvierName" property="drviername" jdbcType="VARCHAR" />
	</association>
	<association property="carRegister" javaType="carRegister">
		<id column="car_id" property="carId" jdbcType="INTEGER" />
	    <result column="carnumber" property="carnumber" jdbcType="VARCHAR" />
	     <result column="useNature" property="usenature" jdbcType="VARCHAR" />
	</association>
	<association property="department" javaType="department">
		<id column="department_id" property="departmentId" jdbcType="VARCHAR" />
	    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	    <result column="fatherdep" property="fatherdep" jdbcType="VARCHAR" />
	    <result column="level" property="level" jdbcType="INTEGER" />
	</association>
  </resultMap>
   <!-- 查询所有记录 -->
	<select id="find" parameterType="carBig" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			 order by changeDate desc
	</select>
	<select id="find1" parameterType="String" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
			c_register.department_id=#{departmentId}
			 order by changeDate desc
	</select>
	<!-- 查询所单个记录 -->
	<select id="selectSingleCarBig" parameterType="INTEGER" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
		WHERE  big_id = #{bigId}
	</select>
	<select id="searchCarBigByCarCarID" parameterType="INTEGER" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
		WHERE  c_register.car_id = #{carId}
		 order by changeDate desc
	</select>
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			c_big
		WHERE
			big_Id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	<select id="searchCarBigByCarBigBand" parameterType="string" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			c_big
		WHERE
			brand LIKE CONCAT( '%',#{brand},'%' ) 
	</select>
	
	<select id="searchCarBigByCarBig1" parameterType="String" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
				c_register.carnumber LIKE CONCAT( '%',#{carnumber},'%' )
			 order by changeDate desc
	</select>
	<select id="searchCarBigByCarBig2" parameterType="String" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
				department.department_name LIKE CONCAT( '%',#{departmentName},'%' )
			 	order by changeDate desc
	</select>
	<select id="searchCarBigByCarBig1s" parameterType="String" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
			c_register.department_id=#{0}
			and
			c_register.carnumber LIKE CONCAT( '%',#{1},'%' )
			 order by changeDate desc
	</select>
	<select id="searchCarBigByCarBig2s" parameterType="String" resultMap="BaseResultMap">
		SELECT
			big_id,
			changeDate,
			changbig,
			why,
			c_register.car_id,
			c_register.carnumber,
			c_register.useNature,
			c_driver.driver_id,
			c_driver.drvierName,
			department.department_name
		FROM 
			c_big 
			LEFT JOIN c_register ON c_big.car_id = c_register.car_id
			LEFT JOIN c_driver ON c_big.driver_id = c_driver.driver_id
			LEFT JOIN department ON c_register.department_id = department.department_id
			where 
			c_register.department_id=#{0}
			and
			department.department_name LIKE CONCAT( '%',#{1},'%' )
			 order by changeDate desc
	</select>
	
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    big_id, car_id, bigcarnum, drivername, changeDate, changbig, why, driver_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.hqu.production_ms.domain.CarBigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from c_big
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from c_big
    where big_id = #{bigId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from c_big
    where big_id = #{bigId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hqu.production_ms.domain.CarBigExample" >
    delete from c_big
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hqu.production_ms.domain.CarBig" >
    insert into c_big (big_id, car_id, bigcarnum, 
      drivername, changeDate, changbig, 
      why, driver_id)
    values (#{bigId,jdbcType=INTEGER}, #{carId,jdbcType=INTEGER}, #{bigcarnum,jdbcType=VARCHAR}, 
      #{drivername,jdbcType=VARCHAR}, #{changedate,jdbcType=TIMESTAMP}, #{changbig,jdbcType=VARCHAR}, 
      #{why,jdbcType=VARCHAR}, #{driverId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.hqu.production_ms.domain.CarBig" >
    insert into c_big
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bigId != null" >
        big_id,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
      <if test="bigcarnum != null" >
        bigcarnum,
      </if>
      <if test="drivername != null" >
        drivername,
      </if>
      <if test="changedate != null" >
        changeDate,
      </if>
      <if test="changbig != null" >
        changbig,
      </if>
      <if test="why != null" >
        why,
      </if>
      <if test="driverId != null" >
        driver_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bigId != null" >
        #{bigId,jdbcType=INTEGER},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=INTEGER},
      </if>
      <if test="bigcarnum != null" >
        #{bigcarnum,jdbcType=VARCHAR},
      </if>
      <if test="drivername != null" >
        #{drivername,jdbcType=VARCHAR},
      </if>
      <if test="changedate != null" >
        #{changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="changbig != null" >
        #{changbig,jdbcType=VARCHAR},
      </if>
      <if test="why != null" >
        #{why,jdbcType=VARCHAR},
      </if>
      <if test="driverId != null" >
        #{driverId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hqu.production_ms.domain.CarBigExample" resultType="java.lang.Integer" >
    select count(*) from c_big
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update c_big
    <set >
      <if test="record.bigId != null" >
        big_id = #{record.bigId,jdbcType=INTEGER},
      </if>
      <if test="record.carId != null" >
        car_id = #{record.carId,jdbcType=INTEGER},
      </if>
      <if test="record.bigcarnum != null" >
        bigcarnum = #{record.bigcarnum,jdbcType=VARCHAR},
      </if>
      <if test="record.drivername != null" >
        drivername = #{record.drivername,jdbcType=VARCHAR},
      </if>
      <if test="record.changedate != null" >
        changeDate = #{record.changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changbig != null" >
        changbig = #{record.changbig,jdbcType=VARCHAR},
      </if>
      <if test="record.why != null" >
        why = #{record.why,jdbcType=VARCHAR},
      </if>
      <if test="record.driverId != null" >
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update c_big
    set big_id = #{record.bigId,jdbcType=INTEGER},
      car_id = #{record.carId,jdbcType=INTEGER},
      bigcarnum = #{record.bigcarnum,jdbcType=VARCHAR},
      drivername = #{record.drivername,jdbcType=VARCHAR},
      changeDate = #{record.changedate,jdbcType=TIMESTAMP},
      changbig = #{record.changbig,jdbcType=VARCHAR},
      why = #{record.why,jdbcType=VARCHAR},
      driver_id = #{record.driverId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hqu.production_ms.domain.CarBig" >
    update c_big
    <set >
      <if test="carId != null" >
        car_id = #{carId,jdbcType=INTEGER},
      </if>
      <if test="bigcarnum != null" >
        bigcarnum = #{bigcarnum,jdbcType=VARCHAR},
      </if>
      <if test="drivername != null" >
        drivername = #{drivername,jdbcType=VARCHAR},
      </if>
      <if test="changedate != null" >
        changeDate = #{changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="changbig != null" >
        changbig = #{changbig,jdbcType=VARCHAR},
      </if>
      <if test="why != null" >
        why = #{why,jdbcType=VARCHAR},
      </if>
      <if test="driverId != null" >
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
    </set>
    where big_id = #{bigId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hqu.production_ms.domain.CarBig" >
    update c_big
    set car_id = #{carId,jdbcType=INTEGER},
      bigcarnum = #{bigcarnum,jdbcType=VARCHAR},
      drivername = #{drivername,jdbcType=VARCHAR},
      changeDate = #{changedate,jdbcType=TIMESTAMP},
      changbig = #{changbig,jdbcType=VARCHAR},
      why = #{why,jdbcType=VARCHAR},
      driver_id = #{driverId,jdbcType=INTEGER}
    where big_id = #{bigId,jdbcType=INTEGER}
  </update>
</mapper>